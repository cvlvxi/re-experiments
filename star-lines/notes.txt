# 2023-06-04
- Decided to detect in the vertex shader which angle the line body should be instead of drawing redundant overdraws doing every different angle.
- Maybe don't need to draw the point at all, just the line body.
- Made a cool looking red rune thing, forked it off as 'runes'.
- Drew the star lines.
- Using a const coefficients array instead of a locally scoped array.
  - Saves having to compute redundant vertices per vertex.
  - Seems like a useful general pattern.

# 2023-06-03
- Switched to hard coded triangle vertices in the vertex code.
  - Avoids needing a compute pass to generate the vertices.
- Got something rendering.

# 2023-05-05
- Goal:
  - Take as input Array<Array<{colour: vec3, size: number, points: Array<vec2>}>>.
  - Draw a diamond at each point and two rectangles joining the diamonds, see lines.png for diagram.
  - Use WebGPU to do it.
  - Use compute to generate the triangles from the raw input.
  - Generate lots of these as an animation on the CPU, upload all the frame data to the GPU and render the animation.
