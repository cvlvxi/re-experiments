# 2023-05-23
- Ideas/wants:
  - ADTs (sealed classes).
  - Reference types:
    - @ is unique_ptr.
    - # is ref counted pointer.
    - ~ is weak ptr.
    - & is reference with lifetime checks.
      - No lifetime syntax, same as elided lifetimes.
      - Maybe can't exist in structs.
      - Not sure about mutations causing destructions during reference lifetime, might break this idea.
      - Want a solution for referencing stack values to avoid heap costs where important e.g. vector math.
    - $ is GC maybe?
    - None of these are nullable.
  - ? for optional?
  - Absence of pointer type means inline.
  - Constructors and destructors.
  - Classes.
  - Inheritance.
  - Traits.
  - async/await.
  - Promise.
  - List/Map.
  - Generators.
  - Ranges with | syntax.
  - mut.
  - {u,i,f}{8,16,32,64}.
  - Inspection mode.
  - No exceptions, only crash.
  - ? try operator.
    - Can this work with the ? optional type?
      dog : ?@Dog;
      return dog?;
  - Types are move/copy like Rust?
    - Explicit clone() for move types.
